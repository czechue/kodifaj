{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport '../../../public/static/style.css';\nimport NewTaskComponent from \"../../../components/new-task/new-task.component\";\nimport axios from \"axios\";\n\nvar TaskPage = function TaskPage(_ref) {\n  var task = _ref.task;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var onSubmit = function onSubmit(task) {\n    return axios.post(\"\".concat(HOSTNAME, \"/api/tasks\"), task);\n  };\n\n  return __jsx(LayoutComponent, {\n    user: user\n  }, __jsx(NewTaskComponent, {\n    task: task,\n    onSubmit: onSubmit\n  }));\n};\n\nTaskPage.getInitialProps = function _callee(_ref2) {\n  var id, res, task;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref2.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(HOSTNAME, \"/api/tasks/\").concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          task = _context.sent;\n          return _context.abrupt(\"return\", {\n            task: task\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/pages/views/tasks/edit.tsx"],"names":["React","useContext","fetch","UserContext","HOSTNAME","LayoutComponent","NewTaskComponent","axios","TaskPage","task","user","onSubmit","post","getInitialProps","id","query","res","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,eAAP,MAA4B,oDAA5B;AAEA,OAAO,kCAAP;AACA,OAAOC,gBAAP,MAA8C,iDAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAyB,GAAG,SAA5BA,QAA4B,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,oBAC9BR,UAAU,CAACE,WAAD,CADoB;AAAA,MACvCO,IADuC,eACvCA,IADuC;;AAG/C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACF,IAAD,EAAyB;AACzC,WAAOF,KAAK,CAACK,IAAN,WAA6BR,QAA7B,iBAAmDK,IAAnD,CAAP;AACA,GAFD;;AAIA,SACC,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEC;AAAvB,KACC,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAED,IAAxB;AAA8B,IAAA,QAAQ,EAAEE;AAAxC,IADD,CADD;AAKA,CAZD;;AAcAH,QAAQ,CAACK,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,UAAAA,EAAlB,SAASC,KAAT,CAAkBD,EAAlB;AAAA;AAAA,2CACRZ,KAAK,WAAIE,QAAJ,wBAA0BU,EAA1B,EADG;;AAAA;AACpBE,UAAAA,GADoB;AAAA;AAAA,2CAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBR,UAAAA,IAFoB;AAAA,2CAGnB;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAHmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAMA,eAAeD,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\n\nimport '../../../public/static/style.css';\nimport NewTaskComponent, {NewTaskMapped} from \"../../../components/new-task/new-task.component\";\nimport axios from \"axios\";\n\nconst TaskPage: NextPage<Props> = ({ task }) => {\n\tconst { user } = useContext(UserContext);\n\n\tconst onSubmit = (task: NewTaskMapped) => {\n\t\treturn axios.post<NewTaskMapped>(`${HOSTNAME}/api/tasks`, task);\n\t};\n\n\treturn (\n\t\t<LayoutComponent user={user}>\n\t\t\t<NewTaskComponent task={task} onSubmit={onSubmit} />\n\t\t</LayoutComponent>\n\t);\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n\tconst res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n\tconst task = await res.json();\n\treturn { task };\n};\n\nexport default TaskPage;\n\ninterface Props {\n\ttask: Task;\n}\n"]},"metadata":{},"sourceType":"module"}