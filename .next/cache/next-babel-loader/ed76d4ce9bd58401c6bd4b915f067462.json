{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport HeadingComponent from '../../shared/heading/heading.component';\nimport SolutionFormComponent from './solution-form/solution-form.component';\nimport SolutionsComponent, { SolutionType } from '../../shared/solutions/solutions.component';\n\nvar Heading = function Heading(_ref) {\n  var children = _ref.children;\n  return __jsx(HeadingComponent, {\n    CustomTag: \"h2\",\n    orientation: \"left\",\n    size: \"2xl\",\n    font: \"thin\",\n    tracking: \"wide\"\n  }, children);\n};\n\nvar SectionToggleIcon = function SectionToggleIcon(_ref2) {\n  var isOpen = _ref2.isOpen;\n  return __jsx(\"img\", {\n    className: \"mx-2 h-4 w-4\",\n    src: isOpen ? '/static/images/chevron-thin-right.svg' : '/static/images/chevron-thin-down.svg',\n    alt: \"section toggler\"\n  });\n};\n\nexport default function ContentComponent(_ref3) {\n  var content = _ref3.content,\n      _ref3$solutions = _ref3.solutions,\n      solutions = _ref3$solutions === void 0 ? [] : _ref3$solutions,\n      onSubmit = _ref3.onSubmit,\n      loading = _ref3.loading;\n\n  var _useState = useState({\n    solution: false,\n    tips: false,\n    solutions: false\n  }),\n      openSections = _useState[0],\n      setOpenedSections = _useState[1];\n\n  function toggleSection(section) {\n    setOpenedSections(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, section, !prevState[section]));\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", null, __jsx(Heading, null, \"Zadanie\"), __jsx(\"p\", null, content)), __jsx(\"section\", {\n    className: \"mt-6\"\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(Heading, null, \"Dodaj rozwi\\u0105zanie\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return toggleSection(OpenableSections.SOLUTION);\n    }\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.solution\n  }))), openSections.solution && __jsx(\"div\", {\n    className: \"my-2\"\n  }, __jsx(SolutionFormComponent, {\n    loading: loading,\n    onSubmit: onSubmit\n  }))), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(Heading, null, \"Wskaz\\xF3wki\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return toggleSection(OpenableSections.TIPS);\n    }\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.tips\n  }))), openSections.tips && __jsx(\"p\", {\n    className: \"my-2\"\n  }, content)), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(Heading, null, \"Rozwi\\u0105zania\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return toggleSection(OpenableSections.SOLITIONS);\n    }\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.solutions\n  }))), openSections.solutions && __jsx(\"div\", {\n    className: \"my-2\"\n  }, __jsx(SolutionsComponent, {\n    type: SolutionType.WithoutTaskData,\n    solutions: solutions\n  }))));\n}\nvar OpenableSections;\n\n(function (OpenableSections) {\n  OpenableSections[\"SOLUTION\"] = \"solution\";\n  OpenableSections[\"TIPS\"] = \"tips\";\n  OpenableSections[\"SOLITIONS\"] = \"solutions\";\n})(OpenableSections || (OpenableSections = {}));","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/components/task-detail/content/content.component.tsx"],"names":["React","useState","HeadingComponent","SolutionFormComponent","SolutionsComponent","SolutionType","Heading","children","SectionToggleIcon","isOpen","ContentComponent","content","solutions","onSubmit","loading","solution","tips","openSections","setOpenedSections","toggleSection","section","prevState","OpenableSections","SOLUTION","TIPS","SOLITIONS","WithoutTaskData"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport HeadingComponent from '../../shared/heading/heading.component';\nimport SolutionFormComponent from './solution-form/solution-form.component';\nimport { Solution } from '../../../lib/types/solution';\nimport SolutionsComponent, {\n  SolutionType,\n} from '../../shared/solutions/solutions.component';\n\nconst Heading = ({ children }: { children: string }) => (\n  <HeadingComponent\n    CustomTag=\"h2\"\n    orientation=\"left\"\n    size=\"2xl\"\n    font=\"thin\"\n    tracking=\"wide\"\n  >\n    {children}\n  </HeadingComponent>\n);\n\nconst SectionToggleIcon = ({ isOpen }: { isOpen: boolean }) => (\n  <img\n    className=\"mx-2 h-4 w-4\"\n    src={\n      isOpen\n        ? '/static/images/chevron-thin-right.svg'\n        : '/static/images/chevron-thin-down.svg'\n    }\n    alt=\"section toggler\"\n  />\n);\n\nexport default function ContentComponent({\n  content,\n  solutions = [],\n  onSubmit,\n  loading,\n}: ContentProps) {\n  const [openSections, setOpenedSections] = useState({\n    solution: false,\n    tips: false,\n    solutions: false,\n  });\n\n  function toggleSection(section: OpenableSections) {\n    setOpenedSections(prevState => ({\n      ...prevState,\n      [section]: !prevState[section],\n    }));\n  }\n\n  return (\n    <>\n      <section>\n        <Heading>Zadanie</Heading>\n        <p>{content}</p>\n      </section>\n\n      <section className=\"mt-6\">\n        <div className=\"flex\">\n          <Heading>Dodaj rozwiązanie</Heading>\n          <button onClick={() => toggleSection(OpenableSections.SOLUTION)}>\n            <SectionToggleIcon isOpen={openSections.solution} />\n          </button>\n        </div>\n        {openSections.solution && (\n          <div className=\"my-2\">\n            <SolutionFormComponent loading={loading} onSubmit={onSubmit} />\n          </div>\n        )}\n      </section>\n\n      <section>\n        <div className=\"flex\">\n          <Heading>Wskazówki</Heading>\n          <button onClick={() => toggleSection(OpenableSections.TIPS)}>\n            <SectionToggleIcon isOpen={openSections.tips} />\n          </button>\n        </div>\n        {openSections.tips && <p className=\"my-2\">{content}</p>}\n      </section>\n\n      <section>\n        <div className=\"flex\">\n          <Heading>Rozwiązania</Heading>\n          <button onClick={() => toggleSection(OpenableSections.SOLITIONS)}>\n            <SectionToggleIcon isOpen={openSections.solutions} />\n          </button>\n        </div>\n        {openSections.solutions && (\n          <div className=\"my-2\">\n            <SolutionsComponent\n              type={SolutionType.WithoutTaskData}\n              solutions={solutions}\n            />\n          </div>\n        )}\n      </section>\n    </>\n  );\n}\n\ninterface ContentProps {\n  content: string;\n  solutions: Solution[];\n  onSubmit: (value: any) => void;\n  loading: boolean;\n}\n\nenum OpenableSections {\n  SOLUTION = 'solution',\n  TIPS = 'tips',\n  SOLITIONS = 'solutions',\n}\n"]},"metadata":{},"sourceType":"module"}