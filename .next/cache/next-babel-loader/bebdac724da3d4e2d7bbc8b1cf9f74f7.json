{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution from './utils/add-solution.util';\nexport default function TaskDetailComponent(_ref) {\n  var images = _ref.images,\n      title = _ref.title,\n      content = _ref.content,\n      createdAt = _ref.createdAt,\n      _user = _ref._user,\n      difficulty = _ref.difficulty,\n      tags = _ref.tags,\n      repo = _ref.repo,\n      _solutions = _ref._solutions,\n      _id = _ref._id,\n      updateSolutions = _ref.updateSolutions;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  function handleOnSubmitSolution(_ref2) {\n    var repo = _ref2.repo,\n        demo = _ref2.demo,\n        comment = _ref2.comment;\n    setLoading(true);\n    addSolution({\n      repo: repo,\n      demo: demo,\n      comment: comment,\n      taskId: _id\n    }).then(function (_ref3) {\n      var data = _ref3.data;\n      updateSolutions(data);\n    })[\"finally\"](function () {\n      return setLoading(false);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mb-5\"\n  }, __jsx(HeadingComponent, {\n    orientation: \"left\",\n    size: \"normal\"\n  }, title)), __jsx(\"article\", {\n    className: \"task-detail__wrapper\"\n  }, __jsx(\"section\", {\n    className: \"task-detail__carousel sm:p-2\"\n  }, __jsx(CarouselComponent, {\n    images: images\n  })), __jsx(\"section\", {\n    className: \"task-detail__aside sm:pl-12\"\n  }, __jsx(AsideComponent, {\n    createdAt: createdAt,\n    author: _user.login,\n    tags: tags,\n    difficulty: difficulty,\n    repo: repo\n  })), __jsx(\"section\", {\n    className: \"task-detail__content sm:p-2\"\n  }, __jsx(ContentComponent, {\n    content: content,\n    solutions: _solutions,\n    onSubmit: handleOnSubmitSolution,\n    loading: loading\n  }))));\n}","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/components/task-detail/task-detail.component.tsx"],"names":["React","useState","CarouselComponent","AsideComponent","ContentComponent","HeadingComponent","addSolution","TaskDetailComponent","images","title","content","createdAt","_user","difficulty","tags","repo","_solutions","_id","updateSolutions","loading","setLoading","handleOnSubmitSolution","demo","comment","taskId","then","data","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,WAAP,MAAiD,2BAAjD;AAGA,eAAe,SAASC,mBAAT,OAYK;AAAA,MAXlBC,MAWkB,QAXlBA,MAWkB;AAAA,MAVlBC,KAUkB,QAVlBA,KAUkB;AAAA,MATlBC,OASkB,QATlBA,OASkB;AAAA,MARlBC,SAQkB,QARlBA,SAQkB;AAAA,MAPlBC,KAOkB,QAPlBA,KAOkB;AAAA,MANlBC,UAMkB,QANlBA,UAMkB;AAAA,MALlBC,IAKkB,QALlBA,IAKkB;AAAA,MAJlBC,IAIkB,QAJlBA,IAIkB;AAAA,MAHlBC,UAGkB,QAHlBA,UAGkB;AAAA,MAFlBC,GAEkB,QAFlBA,GAEkB;AAAA,MADlBC,eACkB,QADlBA,eACkB;;AAAA,kBACYjB,QAAQ,CAAC,KAAD,CADpB;AAAA,MACXkB,OADW;AAAA,MACFC,UADE;;AAGlB,WAASC,sBAAT,QAIwB;AAAA,QAHtBN,IAGsB,SAHtBA,IAGsB;AAAA,QAFtBO,IAEsB,SAFtBA,IAEsB;AAAA,QADtBC,OACsB,SADtBA,OACsB;AACtBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAd,IAAAA,WAAW,CAAC;AAAES,MAAAA,IAAI,EAAJA,IAAF;AAAQO,MAAAA,IAAI,EAAJA,IAAR;AAAcC,MAAAA,OAAO,EAAPA,OAAd;AAAuBC,MAAAA,MAAM,EAAEP;AAA/B,KAAD,CAAX,CACGQ,IADH,CACQ,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AAClBR,MAAAA,eAAe,CAACQ,IAAD,CAAf;AACD,KAHH,aAIW;AAAA,aAAMN,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD;;AAED,SACE,4BACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,gBAAD;AAAkB,IAAA,WAAW,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC;AAA1C,KACGX,KADH,CADF,CADF,EAME;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,iBAAD;AAAmB,IAAA,MAAM,EAAED;AAA3B,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,cAAD;AACE,IAAA,SAAS,EAAEG,SADb;AAEE,IAAA,MAAM,EAAEC,KAAK,CAACe,KAFhB;AAGE,IAAA,IAAI,EAAEb,IAHR;AAIE,IAAA,UAAU,EAAED,UAJd;AAKE,IAAA,IAAI,EAAEE;AALR,IADF,CAJF,EAaE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,SAAS,EAAEM,UAFb;AAGE,IAAA,QAAQ,EAAEK,sBAHZ;AAIE,IAAA,OAAO,EAAEF;AAJX,IADF,CAbF,CANF,CADF;AA+BD","sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../../lib/types/task';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution, { AddSolutionFormData } from './utils/add-solution.util';\nimport { Solution } from '../../lib/types/solution';\n\nexport default function TaskDetailComponent({\n  images,\n  title,\n  content,\n  createdAt,\n  _user,\n  difficulty,\n  tags,\n  repo,\n  _solutions,\n  _id,\n  updateSolutions,\n}: TaskDetailProps) {\n  const [loading, setLoading] = useState(false);\n\n  function handleOnSubmitSolution({\n    repo,\n    demo,\n    comment,\n  }: AddSolutionFormData) {\n    setLoading(true);\n    addSolution({ repo, demo, comment, taskId: _id })\n      .then(({ data }) => {\n        updateSolutions(data);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <HeadingComponent orientation=\"left\" size=\"normal\">\n          {title}\n        </HeadingComponent>\n      </div>\n      <article className=\"task-detail__wrapper\">\n        <section className=\"task-detail__carousel sm:p-2\">\n          <CarouselComponent images={images} />\n        </section>\n        <section className=\"task-detail__aside sm:pl-12\">\n          <AsideComponent\n            createdAt={createdAt}\n            author={_user.login}\n            tags={tags}\n            difficulty={difficulty}\n            repo={repo}\n          />\n        </section>\n        <section className=\"task-detail__content sm:p-2\">\n          <ContentComponent\n            content={content}\n            solutions={_solutions}\n            onSubmit={handleOnSubmitSolution}\n            loading={loading}\n          />\n        </section>\n      </article>\n    </>\n  );\n}\n\ninterface TaskDetailProps extends Task {\n  updateSolutions: (solutions: Solution[]) => void;\n}\n"]},"metadata":{},"sourceType":"module"}