{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { TaskHeading } from '../heading/task-heading.component';\nimport SolutionFormComponent from './solution-form/solution-form.component';\nimport SolutionsComponent, { SolutionType } from '../../shared/solutions/solutions.component';\nimport { MarkdownViewComponent } from '../../shared/markdown-view/markdown-view.component';\n\nconst SectionToggleIcon = ({\n  isOpen\n}) => __jsx(\"img\", {\n  className: \"mx-2 h-4 w-4\",\n  src: isOpen ? '/static/images/chevron-thin-right.svg' : '/static/images/chevron-thin-down.svg',\n  alt: \"section toggler\"\n});\n\nexport default function ContentComponent({\n  content,\n  solutions = [],\n  tips = [],\n  onSubmit,\n  loading\n}) {\n  const {\n    0: openSections,\n    1: setOpenedSections\n  } = useState({\n    solution: false,\n    tips: false,\n    solutions: false\n  });\n\n  function toggleSection(section) {\n    setOpenedSections(prevState => _objectSpread({}, prevState, {\n      [section]: !prevState[section]\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", null, __jsx(TaskHeading, null, \"Zadanie\"), __jsx(MarkdownViewComponent, {\n    source: content\n  })), __jsx(\"section\", {\n    className: \"mt-6\"\n  }, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(TaskHeading, null, \"Dodaj rozwi\\u0105zanie\"), __jsx(\"button\", {\n    onClick: () => toggleSection(OpenableSections.SOLUTION)\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.solution\n  }))), openSections.solution && __jsx(\"div\", {\n    className: \"my-2\"\n  }, __jsx(SolutionFormComponent, {\n    loading: loading,\n    onSubmit: onSubmit\n  }))), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(TaskHeading, null, \"Wskaz\\xF3wki\"), __jsx(\"button\", {\n    onClick: () => toggleSection(OpenableSections.TIPS)\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.tips\n  }))), openSections.tips && __jsx(\"p\", {\n    className: \"my-2\"\n  }, tips.join(','))), __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"flex\"\n  }, __jsx(TaskHeading, null, \"Rozwi\\u0105zania\"), __jsx(\"button\", {\n    onClick: () => toggleSection(OpenableSections.SOLITIONS)\n  }, __jsx(SectionToggleIcon, {\n    isOpen: openSections.solutions\n  }))), openSections.solutions && __jsx(\"div\", {\n    className: \"my-2\"\n  }, __jsx(SolutionsComponent, {\n    type: SolutionType.WithoutTaskData,\n    solutions: solutions\n  }))));\n}\nvar OpenableSections;\n\n(function (OpenableSections) {\n  OpenableSections[\"SOLUTION\"] = \"solution\";\n  OpenableSections[\"TIPS\"] = \"tips\";\n  OpenableSections[\"SOLITIONS\"] = \"solutions\";\n})(OpenableSections || (OpenableSections = {}));","map":null,"metadata":{},"sourceType":"module"}