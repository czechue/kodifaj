{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default function mapFormToNewTaskFormat(task) {\n  var _task$tips, _task$images;\n\n  return _objectSpread({}, task, {\n    tips: ((_task$tips = task.tips) === null || _task$tips === void 0 ? void 0 : _task$tips.length) ? task.tips.map(tip => tip.tip) : [],\n    images: ((_task$images = task.images) === null || _task$images === void 0 ? void 0 : _task$images.length) ? task.images.map(image => image.image) : [],\n    tags: task.tags ? task.tags.split(',').map(s => s.trim()) : []\n  });\n}","map":null,"metadata":{},"sourceType":"module"}