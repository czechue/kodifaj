{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport { FieldArray } from 'react-final-form-arrays';\nimport arrayMutators from 'final-form-arrays';\nimport ReactMarkdown from 'react-markdown';\nimport FormWrapperComponent from '../shared/form-wrapper/form-wrapper.component';\nimport InputComponent from '../shared/input/input.component';\nimport mapFormToNewTaskFormat from './utils/map-form-to-new-task-form.util';\nimport NewTaskHeading from './heading/heading.component';\nimport FieldArrayComponent from './field-array/field-array.component';\nimport CodeBlock from './utils/code-block.hoc'; // const required = (value: string) => (value ? undefined : \"Required\");\n\nexport default function NewTaskComponent({\n  onSubmit\n}) {\n  // todo: investigate why values argument doesnt work with NewTaskForm type\n  async function onFormSubmit(values) {\n    if (onSubmit) {\n      onSubmit(mapFormToNewTaskFormat(values));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NewTaskHeading, null, \"Kreator zada\\u0144\"), __jsx(FormWrapperComponent, null, __jsx(Form, {\n    onSubmit: onFormSubmit,\n    mutators: _objectSpread({}, arrayMutators),\n    render: ({\n      handleSubmit,\n      values\n    }) => __jsx(\"form\", {\n      onSubmit: handleSubmit\n    }, __jsx(Field, {\n      name: \"title\",\n      label: \"Tytu\\u0142\",\n      component: InputComponent,\n      placeholder: \"np. Super cool formularz\"\n    }), __jsx(Field, {\n      name: \"repo\",\n      label: \"Link do zadania na Github\",\n      component: InputComponent,\n      placeholder: \"https://github.com/kodifaj\"\n    }), __jsx(Field, {\n      name: \"tags\",\n      label: \"Tagi\",\n      component: InputComponent,\n      placeholder: \"html, js, css\"\n    }), __jsx(FieldArray, {\n      name: \"tips\"\n    }, ({\n      fields,\n      meta\n    }) => __jsx(FieldArrayComponent, {\n      fields: fields,\n      meta: meta,\n      recordName: \"tip\",\n      label: \"Wskaz\\xF3wki\",\n      placeholder: \"Nowa wskaz\\xF3wka\"\n    })), __jsx(FieldArray, {\n      name: \"images\"\n    }, ({\n      fields,\n      meta\n    }) => __jsx(FieldArrayComponent, {\n      fields: fields,\n      meta: meta,\n      recordName: \"image\",\n      label: \"Obrazy\",\n      placeholder: \"Nowy obraz max 10kb\"\n    })), __jsx(Field, {\n      name: \"content\",\n      label: \"Tre\\u015B\\u0107\",\n      component: InputComponent,\n      placeholder: \"Na czym polega zadanie?\",\n      fieldType: \"textarea\"\n    }), __jsx(\"div\", {\n      className: \"bg-white p-2\"\n    }, __jsx(\"div\", {\n      className: \"markdown-editor-toolbar\"\n    }, __jsx(\"button\", {\n      className: \"devicon-bold\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"BOLD\"),\n      \"aria-label\": \"wstaw pogrubienie\",\n      title: \"wstaw pogrubienie\"\n    }), __jsx(\"button\", {\n      className: \"devicon-italic\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"ITALIC\"),\n      \"aria-label\": \"wstaw italik\",\n      title: \"wstaw italik\"\n    }), __jsx(\"button\", {\n      className: \"devicon-header\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"HEADING\"),\n      \"aria-label\": \"wstaw nag\\u0142\\xF3wek\",\n      title: \"wstaw nag\\u0142\\xF3wek\"\n    }), __jsx(\"span\", {\n      className: \"separator\"\n    }, \"|\"), __jsx(\"button\", {\n      className: \"devicon-code\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"CODEBLOCK\"),\n      \"aria-label\": \"wstaw blok kodu\",\n      title: \"wstaw blok kodu\"\n    }), __jsx(\"button\", {\n      className: \"devicon-list-ul\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"UL\"),\n      \"aria-label\": \"wstaw list\\u0119 nieuporz\\u0105dkowan\\u0105\",\n      title: \"wstaw list\\u0119 nieuporz\\u0105dkowan\\u0105\"\n    }), __jsx(\"button\", {\n      className: \"devicon-list-ol\",\n      disabled: isPreview,\n      onClick: this.handleAction(\"OL\"),\n      \"aria-label\": \"wstaw list\\u0119 uporz\\u0105dkowan\\u0105\",\n      title: \"wstaw list\\u0119 uporz\\u0105dkowan\\u0105\"\n    }), __jsx(\"span\", {\n      className: \"separator\"\n    }, \"|\"), __jsx(\"button\", {\n      className: \"devicon-eye\",\n      onClick: this.togglePreview,\n      \"aria-hidden\": true,\n      title: \"zobacz podgl\\u0105d\"\n    })), __jsx(ReactMarkdown, {\n      renderers: {\n        code: CodeBlock\n      },\n      source: values.content\n    })), __jsx(\"button\", {\n      className: \"bg-gradient-button\",\n      type: \"submit\"\n    }, \"Submit\"))\n  })));\n}","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/components/new-task/new-task.component.tsx"],"names":["React","Form","Field","FieldArray","arrayMutators","ReactMarkdown","FormWrapperComponent","InputComponent","mapFormToNewTaskFormat","NewTaskHeading","FieldArrayComponent","CodeBlock","NewTaskComponent","onSubmit","onFormSubmit","values","handleSubmit","fields","meta","isPreview","handleAction","togglePreview","code","content"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AxiosResponse } from 'axios';\nimport { Form, Field } from 'react-final-form';\nimport { FieldArray } from 'react-final-form-arrays';\nimport arrayMutators from 'final-form-arrays';\n\nimport ReactMarkdown from 'react-markdown';\n\nimport FormWrapperComponent from '../shared/form-wrapper/form-wrapper.component';\nimport InputComponent from '../shared/input/input.component';\nimport mapFormToNewTaskFormat from './utils/map-form-to-new-task-form.util';\nimport NewTaskHeading from './heading/heading.component';\nimport FieldArrayComponent from './field-array/field-array.component';\nimport CodeBlock from './utils/code-block.hoc';\n\n// const required = (value: string) => (value ? undefined : \"Required\");\n\nexport default function NewTaskComponent({ onSubmit }: NewTaskProps) {\n  // todo: investigate why values argument doesnt work with NewTaskForm type\n  async function onFormSubmit(values: any) {\n    if (onSubmit) {\n      onSubmit(mapFormToNewTaskFormat(values));\n    }\n  }\n\n  return (\n    <>\n      <NewTaskHeading>Kreator zadań</NewTaskHeading>\n      <FormWrapperComponent>\n        <Form\n          onSubmit={onFormSubmit}\n          mutators={{\n            ...arrayMutators,\n          }}\n          render={({ handleSubmit, values }) => (\n            <form onSubmit={handleSubmit}>\n              <Field\n                name=\"title\"\n                label=\"Tytuł\"\n                component={InputComponent}\n                placeholder=\"np. Super cool formularz\"\n              />\n\n              <Field\n                name=\"repo\"\n                label=\"Link do zadania na Github\"\n                component={InputComponent}\n                placeholder=\"https://github.com/kodifaj\"\n              />\n\n              <Field\n                name=\"tags\"\n                label=\"Tagi\"\n                component={InputComponent}\n                placeholder=\"html, js, css\"\n              />\n\n              <FieldArray name=\"tips\">\n                {({ fields, meta }) => (\n                  <FieldArrayComponent\n                    fields={fields}\n                    meta={meta}\n                    recordName=\"tip\"\n                    label=\"Wskazówki\"\n                    placeholder=\"Nowa wskazówka\"\n                  />\n                )}\n              </FieldArray>\n\n              <FieldArray name=\"images\">\n                {({ fields, meta }) => (\n                  <FieldArrayComponent\n                    fields={fields}\n                    meta={meta}\n                    recordName=\"image\"\n                    label=\"Obrazy\"\n                    placeholder=\"Nowy obraz max 10kb\"\n                  />\n                )}\n              </FieldArray>\n\n              <Field\n                name=\"content\"\n                label=\"Treść\"\n                component={InputComponent}\n                placeholder=\"Na czym polega zadanie?\"\n                fieldType=\"textarea\"\n              />\n\n              <div className=\"bg-white p-2\">\n                <div className=\"markdown-editor-toolbar\">\n                  <button\n                    className=\"devicon-bold\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"BOLD\")}\n                    aria-label=\"wstaw pogrubienie\"\n                    title=\"wstaw pogrubienie\"\n                  />\n                  <button\n                    className=\"devicon-italic\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"ITALIC\")}\n                    aria-label=\"wstaw italik\"\n                    title=\"wstaw italik\"\n                  />\n                  <button\n                    className=\"devicon-header\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"HEADING\")}\n                    aria-label=\"wstaw nagłówek\"\n                    title=\"wstaw nagłówek\"\n                  />\n                  <span className=\"separator\">|</span>\n                  <button\n                    className=\"devicon-code\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"CODEBLOCK\")}\n                    aria-label=\"wstaw blok kodu\"\n                    title=\"wstaw blok kodu\"\n                  />\n                  <button\n                    className=\"devicon-list-ul\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"UL\")}\n                    aria-label=\"wstaw listę nieuporządkowaną\"\n                    title=\"wstaw listę nieuporządkowaną\"\n                  />\n                  <button\n                    className=\"devicon-list-ol\"\n                    disabled={isPreview}\n                    onClick={this.handleAction(\"OL\")}\n                    aria-label=\"wstaw listę uporządkowaną\"\n                    title=\"wstaw listę uporządkowaną\"\n                  />\n                  <span className=\"separator\">|</span>\n                  <button\n                    className=\"devicon-eye\"\n                    onClick={this.togglePreview}\n                    aria-hidden={true}\n                    title=\"zobacz podgląd\"\n                  />\n                </div>\n                <ReactMarkdown\n                  renderers={{\n                    code: CodeBlock,\n                  }}\n                  source={values.content}\n                />\n              </div>\n\n              <button className=\"bg-gradient-button\" type=\"submit\">\n                Submit\n              </button>\n            </form>\n          )}\n        />\n      </FormWrapperComponent>\n    </>\n  );\n}\n\ninterface NewTaskProps {\n  onSubmit: (task: NewTaskMapped) => Promise<AxiosResponse<NewTaskMapped>>;\n}\n\nexport interface NewTaskForm {\n  content: string;\n  images: Image[];\n  tips: Tip[];\n  title: string;\n  tags: string;\n}\n\nexport interface NewTaskMapped {\n  content: string;\n  images: string[] | [];\n  tips: string[] | [];\n  title: string;\n  tags: string[] | [];\n}\n\ninterface Tip {\n  tip: string;\n}\n\ninterface Image {\n  image: string;\n}\n"]},"metadata":{},"sourceType":"module"}