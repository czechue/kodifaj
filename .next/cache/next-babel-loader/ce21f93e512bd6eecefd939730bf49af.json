{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default function MarkdownEditorComponent(props) {\n  const {\n    input,\n    placeholder,\n    label\n  } = props;\n  const textAreaRef = React.createRef();\n  const inputClassNames = 'font-mono appearance-none block w-full bg-white text-gray-700 rounded-l py-3 px-4 leading-tight border-transparent border focus:outline-none focus:border-violet_primary';\n  const actionToTokens = {\n    BOLD: {\n      open: '**',\n      close: '**'\n    },\n    ITALIC: {\n      open: '_',\n      close: '_'\n    },\n    HEADING: {\n      open: '# ',\n      close: ''\n    },\n    CODEBLOCK: {\n      open: '```javascript\\n',\n      close: '\\n```'\n    },\n    UL: {\n      open: '* ',\n      close: ''\n    },\n    OL: {\n      open: '1. ',\n      close: ''\n    }\n  };\n\n  const addTokensToTextarea = (el, tokens) => {\n    const {\n      selectionStart,\n      selectionEnd,\n      value\n    } = el;\n    const startTokenLenths = tokens.open.length;\n    let newValue = value;\n    newValue = newValue.substring(0, selectionEnd) + tokens.close + newValue.substr(selectionEnd);\n    newValue = newValue.substring(0, selectionStart) + tokens.open + newValue.substr(selectionStart);\n    el.value = newValue;\n    el.setSelectionRange(selectionStart + startTokenLenths, selectionEnd + startTokenLenths);\n  };\n\n  const handleAction = action => e => {\n    var _textAreaRef$current;\n\n    e.preventDefault();\n    const el = textAreaRef.current;\n\n    if (!el) {\n      return;\n    }\n\n    const tokens = actionToTokens[action];\n    addTokensToTextarea(el, tokens);\n    const value = (textAreaRef === null || textAreaRef === void 0 ? void 0 : (_textAreaRef$current = textAreaRef.current) === null || _textAreaRef$current === void 0 ? void 0 : _textAreaRef$current.value) ? textAreaRef.current.value : '';\n    input.onChange(value);\n  };\n\n  return __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n    htmlFor: input.name\n  }, label), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12\",\n    type: \"button\",\n    onClick: handleAction('BOLD'),\n    \"aria-label\": \"wstaw pogrubienie\",\n    title: \"wstaw pogrubienie\"\n  }, \"B\"), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12 ml-2\",\n    type: \"button\",\n    onClick: handleAction('ITALIC'),\n    \"aria-label\": \"wstaw italik\",\n    title: \"wstaw italik\"\n  }, \"I\"), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12 ml-2\",\n    type: \"button\",\n    onClick: handleAction('HEADING'),\n    \"aria-label\": \"wstaw nag\\u0142\\xF3wek\",\n    title: \"wstaw nag\\u0142\\xF3wek\"\n  }, \"H\"), __jsx(\"span\", {\n    className: \"ml-2\"\n  }, \"|\"), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12 ml-2\",\n    type: \"button\",\n    onClick: handleAction('CODEBLOCK'),\n    \"aria-label\": \"wstaw blok kodu\",\n    title: \"wstaw blok kodu\"\n  }, \"code\"), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12 ml-2\",\n    type: \"button\",\n    onClick: handleAction('UL'),\n    \"aria-label\": \"wstaw list\\u0119 nieuporz\\u0105dkowan\\u0105\",\n    title: \"wstaw list\\u0119 nieuporz\\u0105dkowan\\u0105\"\n  }, \"li\"), __jsx(\"button\", {\n    className: \"px-2 bg-white w-12 ml-2\",\n    type: \"button\",\n    onClick: handleAction('OL'),\n    \"aria-label\": \"wstaw list\\u0119 uporz\\u0105dkowan\\u0105\",\n    title: \"wstaw list\\u0119 uporz\\u0105dkowan\\u0105\"\n  }, \"ol\"), __jsx(\"div\", {\n    className: \"mt-2 flex items-stretch\"\n  }, __jsx(\"textarea\", _extends({\n    placeholder: placeholder\n  }, input, {\n    className: inputClassNames,\n    ref: textAreaRef\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}