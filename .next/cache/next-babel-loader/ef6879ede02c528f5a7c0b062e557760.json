{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\nimport '../../../public/static/style.css'; // todo: string[] do naprawy typ, error handling\n\nfunction fetchTask(id) {\n  var res, task;\n  return _regeneratorRuntime.async(function fetchTask$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(HOSTNAME, \"/api/tasks/\").concat(id)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          task = _context.sent;\n          return _context.abrupt(\"return\", {\n            task: task\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nvar TaskPage = function TaskPage(_ref) {\n  var task = _ref.task;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useState = useState(task),\n      currentTask = _useState[0],\n      setCurrentTask = _useState[1];\n\n  function refresh() {\n    var refreshedProps;\n    return _regeneratorRuntime.async(function refresh$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetchTask(task._id));\n\n          case 2:\n            refreshedProps = _context2.sent;\n            console.log('refreshedProps', refreshedProps);\n            setCurrentTask(refreshedProps.task);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  return __jsx(LayoutComponent, {\n    user: user\n  }, __jsx(TaskDetailComponent, _extends({\n    updateTaskData: refresh\n  }, currentTask)));\n};\n\nTaskPage.getInitialProps = function _callee(_ref2) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          id = _ref2.query.id;\n          return _context3.abrupt(\"return\", fetchTask(id));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/pages/views/tasks/[id].tsx"],"names":["React","useContext","useState","fetch","UserContext","HOSTNAME","LayoutComponent","TaskDetailComponent","fetchTask","id","res","json","task","TaskPage","user","currentTask","setCurrentTask","refresh","_id","refreshedProps","console","log","getInitialProps","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AAEA,OAAO,kCAAP,C,CAEA;;AAEA,SAAeC,SAAf,CAAyBC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACoBN,KAAK,WAAIE,QAAJ,wBAA0BI,EAA1B,EADzB;;AAAA;AACQC,UAAAA,GADR;AAAA;AAAA,2CAEqBA,GAAG,CAACC,IAAJ,EAFrB;;AAAA;AAEQC,UAAAA,IAFR;AAAA,2CAGS;AAAEA,YAAAA,IAAI,EAAJA;AAAF,WAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,IAAMC,QAAyB,GAAG,SAA5BA,QAA4B,OAAc;AAAA,MAAXD,IAAW,QAAXA,IAAW;;AAAA,oBAC7BX,UAAU,CAACG,WAAD,CADmB;AAAA,MACtCU,IADsC,eACtCA,IADsC;;AAAA,kBAERZ,QAAQ,CAAOU,IAAP,CAFA;AAAA,MAEvCG,WAFuC;AAAA,MAE1BC,cAF0B;;AAI9C,WAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC+BT,SAAS,CAACI,IAAI,CAACM,GAAN,CADxC;;AAAA;AACQC,YAAAA,cADR;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,cAA9B;AACAH,YAAAA,cAAc,CAACG,cAAc,CAACP,IAAhB,CAAd;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEE;AAAvB,KACE,MAAC,mBAAD;AAAqB,IAAA,cAAc,EAAEG;AAArC,KAAkDF,WAAlD,EADF,CADF;AAKD,CAfD;;AAiBAF,QAAQ,CAACS,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBb,UAAAA,EAAlB,SAASc,KAAT,CAAkBd,EAAlB;AAAA,4CAClBD,SAAS,CAACC,EAAD,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAIA,eAAeI,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\n\nimport '../../../public/static/style.css';\n\n// todo: string[] do naprawy typ, error handling\n\nasync function fetchTask(id: string | string[]) {\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return { task };\n}\n\nconst TaskPage: NextPage<Props> = ({ task }) => {\n  const { user } = useContext(UserContext);\n  const [currentTask, setCurrentTask] = useState<Task>(task);\n\n  async function refresh() {\n    const refreshedProps = await fetchTask(task._id);\n    console.log('refreshedProps', refreshedProps)\n    setCurrentTask(refreshedProps.task);\n  }\n\n  return (\n    <LayoutComponent user={user}>\n      <TaskDetailComponent updateTaskData={refresh} {...currentTask} />\n    </LayoutComponent>\n  );\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n  return fetchTask(id);\n};\n\nexport default TaskPage;\n\ninterface Props {\n  task: Task;\n}\n"]},"metadata":{},"sourceType":"module"}