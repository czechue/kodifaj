{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\nimport '../../../public/static/style.css';\n\nasync function fetchTask(id) {\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return {\n    task\n  };\n}\n\nconst TaskPage = ({\n  task\n}) => {\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    0: currentTask,\n    1: setCurrentTask\n  } = useState(task);\n\n  async function refresh() {\n    const refreshedProps = await fetchTask(task._id);\n    setCurrentTask(refreshedProps.task);\n  }\n\n  return __jsx(LayoutComponent, {\n    user: user\n  }, __jsx(TaskDetailComponent, _extends({\n    refresh: refresh\n  }, currentTask)));\n};\n\nTaskPage.getInitialProps = async ({\n  query: {\n    id\n  }\n}) => {\n  if (typeof id === 'string') {\n    return fetchTask(id);\n  }\n};\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/pages/views/tasks/[id].tsx"],"names":["React","useContext","useState","fetch","UserContext","HOSTNAME","LayoutComponent","TaskDetailComponent","fetchTask","id","res","task","json","TaskPage","user","currentTask","setCurrentTask","refresh","refreshedProps","_id","getInitialProps","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,eAAP,MAA4B,oDAA5B;AACA,OAAOC,mBAAP,MAAgC,uDAAhC;AAEA,OAAO,kCAAP;;AAEA,eAAeC,SAAf,CAAyBC,EAAzB,EAAsC;AACpC,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,GAAEE,QAAS,cAAaI,EAAG,EAA7B,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD;;AAED,MAAME,QAAyB,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAc;AAC9C,QAAM;AAAEG,IAAAA;AAAF,MAAWb,UAAU,CAACG,WAAD,CAA3B;AACA,QAAM;AAAA,OAACW,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAOS,IAAP,CAA9C;;AAEA,iBAAeM,OAAf,GAAyB;AACvB,UAAMC,cAAc,GAAG,MAAMV,SAAS,CAACG,IAAI,CAACQ,GAAN,CAAtC;AACAH,IAAAA,cAAc,CAACE,cAAc,CAACP,IAAhB,CAAd;AACD;;AAED,SACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEG;AAAvB,KACE,MAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEG;AAA9B,KAA2CF,WAA3C,EADF,CADF;AAKD,CAdD;;AAgBAF,QAAQ,CAACO,eAAT,GAA2B,OAAO;AAAEC,EAAAA,KAAK,EAAE;AAAEZ,IAAAA;AAAF;AAAT,CAAP,KAA8C;AACvE,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOD,SAAS,CAACC,EAAD,CAAhB;AACD;AACF,CAJD;;AAMA,eAAeI,QAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\n\nimport '../../../public/static/style.css';\n\nasync function fetchTask(id: string ) {\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return { task };\n}\n\nconst TaskPage: NextPage<Props> = ({ task }) => {\n  const { user } = useContext(UserContext);\n  const [currentTask, setCurrentTask] = useState<Task>(task);\n\n  async function refresh() {\n    const refreshedProps = await fetchTask(task._id);\n    setCurrentTask(refreshedProps.task);\n  }\n\n  return (\n    <LayoutComponent user={user}>\n      <TaskDetailComponent refresh={refresh} {...currentTask} />\n    </LayoutComponent>\n  );\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n  if (typeof id === 'string') {\n    return fetchTask(id);\n  }\n};\n\nexport default TaskPage;\n\ninterface Props {\n  task: Task;\n}\n"]},"metadata":{},"sourceType":"module"}