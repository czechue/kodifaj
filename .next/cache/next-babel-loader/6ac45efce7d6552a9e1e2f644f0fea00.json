{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport '../../../public/static/style.css';\nimport NewTaskComponent from '../../../components/new-task/new-task.component';\nimport axios from 'axios';\n\nvar TaskPage = function TaskPage(_ref) {\n  var task = _ref.task,\n      taskId = _ref.taskId;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var onSubmit = function onSubmit(task) {\n    return axios.put(\"\".concat(HOSTNAME, \"/api/tasks/\").concat(taskId), task);\n  };\n\n  return __jsx(LayoutComponent, {\n    user: user\n  }, __jsx(NewTaskComponent, {\n    task: task,\n    onSubmit: onSubmit\n  }));\n};\n\nTaskPage.getInitialProps = function _callee(_ref2) {\n  var id, taskId, res, task;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref2.query.id;\n          taskId = id;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(HOSTNAME, \"/api/tasks/\").concat(id)));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          task = _context.sent;\n          return _context.abrupt(\"return\", {\n            task: task,\n            taskId: taskId\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/pages/views/tasks/edit.tsx"],"names":["React","useContext","fetch","UserContext","HOSTNAME","LayoutComponent","NewTaskComponent","axios","TaskPage","task","taskId","user","onSubmit","put","getInitialProps","id","query","res","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,SAASC,WAAT,QAA4B,6CAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,OAAOC,eAAP,MAA4B,oDAA5B;AAEA,OAAO,kCAAP;AACA,OAAOC,gBAAP,MAEO,iDAFP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,QAAyB,GAAG,SAA5BA,QAA4B,OAAsB;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,oBACrCT,UAAU,CAACE,WAAD,CAD2B;AAAA,MAC9CQ,IAD8C,eAC9CA,IAD8C;;AAGtD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,IAAD,EAAyB;AACxC,WAAOF,KAAK,CAACM,GAAN,WAA4BT,QAA5B,wBAAkDM,MAAlD,GAA4DD,IAA5D,CAAP;AACD,GAFD;;AAIA,SACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEE;AAAvB,KACE,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEF,IAAxB;AAA8B,IAAA,QAAQ,EAAEG;AAAxC,IADF,CADF;AAKD,CAZD;;AAcAJ,QAAQ,CAACM,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,UAAAA,EAAlB,SAASC,KAAT,CAAkBD,EAAlB;AACnBL,UAAAA,MADmB,GACVK,EADU;AAAA;AAAA,2CAEPb,KAAK,WAAIE,QAAJ,wBAA0BW,EAA1B,EAFE;;AAAA;AAEnBE,UAAAA,GAFmB;AAAA;AAAA,2CAGNA,GAAG,CAACC,IAAJ,EAHM;;AAAA;AAGnBT,UAAAA,IAHmB;AAAA,2CAIlB;AAAEA,YAAAA,IAAI,EAAJA,IAAF;AAAQC,YAAAA,MAAM,EAANA;AAAR,WAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAOA,eAAeF,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\n\nimport '../../../public/static/style.css';\nimport NewTaskComponent, {\n  NewTaskMapped,\n} from '../../../components/new-task/new-task.component';\nimport axios from 'axios';\n\nconst TaskPage: NextPage<Props> = ({ task, taskId }) => {\n  const { user } = useContext(UserContext);\n\n  const onSubmit = (task: NewTaskMapped) => {\n    return axios.put<NewTaskMapped>(`${HOSTNAME}/api/tasks/${taskId}`, task);\n  };\n\n  return (\n    <LayoutComponent user={user}>\n      <NewTaskComponent task={task} onSubmit={onSubmit} />\n    </LayoutComponent>\n  );\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n  const taskId = id as string;\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return { task, taskId };\n};\n\nexport default TaskPage;\n\ninterface Props {\n  task: Task;\n  taskId: string;\n}\n"]},"metadata":{},"sourceType":"module"}