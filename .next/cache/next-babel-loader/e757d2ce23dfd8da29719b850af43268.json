{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter'; // import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nvar CodeBlockComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CodeBlockComponent, _React$PureComponent);\n\n  function CodeBlockComponent() {\n    _classCallCheck(this, CodeBlockComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CodeBlockComponent).apply(this, arguments));\n  }\n\n  _createClass(CodeBlockComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$language = _this$props.language,\n          language = _this$props$language === void 0 ? 'javascript' : _this$props$language,\n          _this$props$value = _this$props.value,\n          value = _this$props$value === void 0 ? '' : _this$props$value;\n      return __jsx(SyntaxHighlighter, {\n        language: language\n      }, value);\n    }\n  }]);\n\n  return CodeBlockComponent;\n}(React.PureComponent);\n\nexport { CodeBlockComponent as default };","map":null,"metadata":{},"sourceType":"module"}