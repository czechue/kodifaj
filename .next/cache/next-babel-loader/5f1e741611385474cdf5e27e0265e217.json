{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution from './utils/add-solution.util';\nimport { TaskHeading } from './heading/task-heading.component';\nexport default function TaskDetailComponent({\n  images,\n  title,\n  content,\n  createdAt,\n  difficulty,\n  tags,\n  tips,\n  repo,\n  updateSolutions,\n  _solutions,\n  _user,\n  _id\n}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  function handleOnSubmitSolution({\n    repo,\n    demo,\n    comment\n  }) {\n    setLoading(true);\n    addSolution({\n      repo,\n      demo,\n      comment,\n      taskId: _id\n    }).then(({\n      data\n    }) => {\n      updateSolutions(data);\n    }).finally(() => setLoading(false));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mb-5\"\n  }, __jsx(HeadingComponent, {\n    orientation: \"left\",\n    size: \"normal\"\n  }, title)), __jsx(\"article\", {\n    className: \"task-detail__wrapper\"\n  }, __jsx(\"section\", {\n    className: \"task-detail__carousel sm:p-2\"\n  }, __jsx(TaskHeading, null, \"Screeny\"), __jsx(CarouselComponent, {\n    images: images\n  })), __jsx(\"section\", {\n    className: \"task-detail__aside sm:pl-12\"\n  }, __jsx(AsideComponent, {\n    createdAt: createdAt,\n    author: _user.login,\n    tags: tags,\n    difficulty: difficulty,\n    repo: repo\n  })), __jsx(\"section\", {\n    className: \"task-detail__content sm:p-2\"\n  }, __jsx(ContentComponent, {\n    content: content,\n    solutions: _solutions,\n    tips: tips,\n    onSubmit: handleOnSubmitSolution,\n    loading: loading\n  }))));\n}","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/components/task-detail/task-detail.component.tsx"],"names":["React","useState","CarouselComponent","AsideComponent","ContentComponent","HeadingComponent","addSolution","TaskHeading","TaskDetailComponent","images","title","content","createdAt","difficulty","tags","tips","repo","updateSolutions","_solutions","_user","_id","loading","setLoading","handleOnSubmitSolution","demo","comment","taskId","then","data","finally","login"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,WAAP,MAAiD,2BAAjD;AAEA,SAASC,WAAT,QAA4B,kCAA5B;AAEA,eAAe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,MAD0C;AAE1CC,EAAAA,KAF0C;AAG1CC,EAAAA,OAH0C;AAI1CC,EAAAA,SAJ0C;AAK1CC,EAAAA,UAL0C;AAM1CC,EAAAA,IAN0C;AAO1CC,EAAAA,IAP0C;AAQ1CC,EAAAA,IAR0C;AAS1CC,EAAAA,eAT0C;AAU1CC,EAAAA,UAV0C;AAW1CC,EAAAA,KAX0C;AAY1CC,EAAAA;AAZ0C,CAA7B,EAaK;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBrB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,WAASsB,sBAAT,CAAgC;AAC9BP,IAAAA,IAD8B;AAE9BQ,IAAAA,IAF8B;AAG9BC,IAAAA;AAH8B,GAAhC,EAIwB;AACtBH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAhB,IAAAA,WAAW,CAAC;AAAEU,MAAAA,IAAF;AAAQQ,MAAAA,IAAR;AAAcC,MAAAA,OAAd;AAAuBC,MAAAA,MAAM,EAAEN;AAA/B,KAAD,CAAX,CACGO,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBX,MAAAA,eAAe,CAACW,IAAD,CAAf;AACD,KAHH,EAIGC,OAJH,CAIW,MAAMP,UAAU,CAAC,KAAD,CAJ3B;AAKD;;AAED,SACE,4BACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,gBAAD;AAAkB,IAAA,WAAW,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC;AAA1C,KACGZ,KADH,CADF,CADF,EAME;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,WAAD,kBADF,EAEE,MAAC,iBAAD;AAAmB,IAAA,MAAM,EAAED;AAA3B,IAFF,CADF,EAKE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,cAAD;AACE,IAAA,SAAS,EAAEG,SADb;AAEE,IAAA,MAAM,EAAEO,KAAK,CAACW,KAFhB;AAGE,IAAA,IAAI,EAAEhB,IAHR;AAIE,IAAA,UAAU,EAAED,UAJd;AAKE,IAAA,IAAI,EAAEG;AALR,IADF,CALF,EAcE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,SAAS,EAAEO,UAFb;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,QAAQ,EAAEQ,sBAJZ;AAKE,IAAA,OAAO,EAAEF;AALX,IADF,CAdF,CANF,CADF;AAiCD","sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../../lib/types/task';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution, { AddSolutionFormData } from './utils/add-solution.util';\nimport { Solution } from '../../lib/types/solution';\nimport { TaskHeading } from './heading/task-heading.component';\n\nexport default function TaskDetailComponent({\n  images,\n  title,\n  content,\n  createdAt,\n  difficulty,\n  tags,\n  tips,\n  repo,\n  updateSolutions,\n  _solutions,\n  _user,\n  _id,\n}: TaskDetailProps) {\n  const [loading, setLoading] = useState(false);\n\n  function handleOnSubmitSolution({\n    repo,\n    demo,\n    comment,\n  }: AddSolutionFormData) {\n    setLoading(true);\n    addSolution({ repo, demo, comment, taskId: _id })\n      .then(({ data }) => {\n        updateSolutions(data);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <HeadingComponent orientation=\"left\" size=\"normal\">\n          {title}\n        </HeadingComponent>\n      </div>\n      <article className=\"task-detail__wrapper\">\n        <section className=\"task-detail__carousel sm:p-2\">\n          <TaskHeading>Screeny</TaskHeading>\n          <CarouselComponent images={images} />\n        </section>\n        <section className=\"task-detail__aside sm:pl-12\">\n          <AsideComponent\n            createdAt={createdAt}\n            author={_user.login}\n            tags={tags}\n            difficulty={difficulty}\n            repo={repo}\n          />\n        </section>\n        <section className=\"task-detail__content sm:p-2\">\n          <ContentComponent\n            content={content}\n            solutions={_solutions}\n            tips={tips}\n            onSubmit={handleOnSubmitSolution}\n            loading={loading}\n          />\n        </section>\n      </article>\n    </>\n  );\n}\n\ninterface TaskDetailProps extends Task {\n  updateSolutions: (solutions: Solution[]) => void;\n}\n"]},"metadata":{},"sourceType":"module"}