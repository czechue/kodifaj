{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution from './utils/add-solution.util';\nimport getSolutionsByTaskId from \"./utils/get-solutions-by-task-id.util\";\nexport default function TaskDetailComponent(_ref) {\n  var images = _ref.images,\n      title = _ref.title,\n      content = _ref.content,\n      createdAt = _ref.createdAt,\n      _user = _ref._user,\n      difficulty = _ref.difficulty,\n      tags = _ref.tags,\n      repo = _ref.repo,\n      _solutions = _ref._solutions,\n      _id = _ref._id,\n      updateSolutions = _ref.updateSolutions;\n\n  // todo: add error handling\n  var handleOnSubmitSolution = function handleOnSubmitSolution(_ref2) {\n    var repo, demo, comment, allTaskSolutions;\n    return _regeneratorRuntime.async(function handleOnSubmitSolution$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            repo = _ref2.repo, demo = _ref2.demo, comment = _ref2.comment;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(addSolution({\n              repo: repo,\n              demo: demo,\n              comment: comment,\n              taskId: _id\n            }));\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(getSolutionsByTaskId(_id));\n\n          case 6:\n            allTaskSolutions = _context.sent;\n            updateSolutions(allTaskSolutions);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]]);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"mb-5\"\n  }, __jsx(HeadingComponent, {\n    orientation: \"left\",\n    size: \"normal\"\n  }, title)), __jsx(\"article\", {\n    className: \"task-detail__wrapper\"\n  }, __jsx(\"section\", {\n    className: \"task-detail__carousel sm:p-2\"\n  }, __jsx(CarouselComponent, {\n    images: images\n  })), __jsx(\"section\", {\n    className: \"task-detail__aside sm:pl-12\"\n  }, __jsx(AsideComponent, {\n    createdAt: createdAt,\n    author: _user.login,\n    tags: tags,\n    difficulty: difficulty,\n    repo: repo\n  })), __jsx(\"section\", {\n    className: \"task-detail__content sm:p-2\"\n  }, __jsx(ContentComponent, {\n    content: content,\n    solutions: _solutions,\n    onSubmit: handleOnSubmitSolution\n  }))));\n}","map":{"version":3,"sources":["/Users/michal.lester/Documents/ML/kodifaj/components/task-detail/task-detail.component.tsx"],"names":["React","CarouselComponent","AsideComponent","ContentComponent","HeadingComponent","addSolution","getSolutionsByTaskId","TaskDetailComponent","images","title","content","createdAt","_user","difficulty","tags","repo","_solutions","_id","updateSolutions","handleOnSubmitSolution","demo","comment","taskId","allTaskSolutions","console","log","login"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,WAAP,MAAiD,2BAAjD;AAEA,OAAOC,oBAAP,MAAiC,uCAAjC;AAEA,eAAe,SAASC,mBAAT,OAYK;AAAA,MAXlBC,MAWkB,QAXlBA,MAWkB;AAAA,MAVlBC,KAUkB,QAVlBA,KAUkB;AAAA,MATlBC,OASkB,QATlBA,OASkB;AAAA,MARlBC,SAQkB,QARlBA,SAQkB;AAAA,MAPlBC,KAOkB,QAPlBA,KAOkB;AAAA,MANlBC,UAMkB,QANlBA,UAMkB;AAAA,MALlBC,IAKkB,QALlBA,IAKkB;AAAA,MAJlBC,IAIkB,QAJlBA,IAIkB;AAAA,MAHlBC,UAGkB,QAHlBA,UAGkB;AAAA,MAFlBC,GAEkB,QAFlBA,GAEkB;AAAA,MADlBC,eACkB,QADlBA,eACkB;;AAClB;AACA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BJ,YAAAA,IAD6B,SAC7BA,IAD6B,EAE7BK,IAF6B,SAE7BA,IAF6B,EAG7BC,OAH6B,SAG7BA,OAH6B;AAAA;AAAA;AAAA,6CAMrBhB,WAAW,CAAC;AAAEU,cAAAA,IAAI,EAAJA,IAAF;AAAQK,cAAAA,IAAI,EAAJA,IAAR;AAAcC,cAAAA,OAAO,EAAPA,OAAd;AAAuBC,cAAAA,MAAM,EAAEL;AAA/B,aAAD,CANU;;AAAA;AAAA;AAAA,6CAOIX,oBAAoB,CAACW,GAAD,CAPxB;;AAAA;AAOrBM,YAAAA,gBAPqB;AAQ3BL,YAAAA,eAAe,CAACK,gBAAD,CAAf;AAR2B;AAAA;;AAAA;AAAA;AAAA;AAU3BC,YAAAA,OAAO,CAACC,GAAR;;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAcA,SACE,4BACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,gBAAD;AAAkB,IAAA,WAAW,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC;AAA1C,KACGhB,KADH,CADF,CADF,EAME;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,iBAAD;AAAmB,IAAA,MAAM,EAAED;AAA3B,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,cAAD;AACE,IAAA,SAAS,EAAEG,SADb;AAEE,IAAA,MAAM,EAAEC,KAAK,CAACc,KAFhB;AAGE,IAAA,IAAI,EAAEZ,IAHR;AAIE,IAAA,UAAU,EAAED,UAJd;AAKE,IAAA,IAAI,EAAEE;AALR,IADF,CAJF,EAaE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACE,MAAC,gBAAD;AACE,IAAA,OAAO,EAAEL,OADX;AAEE,IAAA,SAAS,EAAEM,UAFb;AAGE,IAAA,QAAQ,EAAEG;AAHZ,IADF,CAbF,CANF,CADF;AA8BD","sourcesContent":["import React from 'react';\nimport { Task } from '../../lib/types/task';\nimport CarouselComponent from './carousel/carousel.component';\nimport AsideComponent from './aside/aside.component';\nimport ContentComponent from './content/content.component';\nimport HeadingComponent from '../shared/heading/heading.component';\nimport addSolution, { AddSolutionFormData } from './utils/add-solution.util';\nimport {Solution} from \"../../lib/types/solution\";\nimport getSolutionsByTaskId from \"./utils/get-solutions-by-task-id.util\";\n\nexport default function TaskDetailComponent({\n  images,\n  title,\n  content,\n  createdAt,\n  _user,\n  difficulty,\n  tags,\n  repo,\n  _solutions,\n  _id,\n  updateSolutions,\n}: TaskDetailProps) {\n  // todo: add error handling\n  const handleOnSubmitSolution = async ({\n    repo,\n    demo,\n    comment,\n  }: AddSolutionFormData) => {\n    try {\n      await addSolution({ repo, demo, comment, taskId: _id });\n      const allTaskSolutions = await getSolutionsByTaskId(_id);\n      updateSolutions(allTaskSolutions)\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mb-5\">\n        <HeadingComponent orientation=\"left\" size=\"normal\">\n          {title}\n        </HeadingComponent>\n      </div>\n      <article className=\"task-detail__wrapper\">\n        <section className=\"task-detail__carousel sm:p-2\">\n          <CarouselComponent images={images} />\n        </section>\n        <section className=\"task-detail__aside sm:pl-12\">\n          <AsideComponent\n            createdAt={createdAt}\n            author={_user.login}\n            tags={tags}\n            difficulty={difficulty}\n            repo={repo}\n          />\n        </section>\n        <section className=\"task-detail__content sm:p-2\">\n          <ContentComponent\n            content={content}\n            solutions={_solutions}\n            onSubmit={handleOnSubmitSolution}\n          />\n        </section>\n      </article>\n    </>\n  );\n}\n\ninterface TaskDetailProps extends Task {\n  updateSolutions: (solutions: Solution[]) => void;\n}\n"]},"metadata":{},"sourceType":"module"}