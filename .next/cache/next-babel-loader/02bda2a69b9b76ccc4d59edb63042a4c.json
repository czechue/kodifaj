{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\nimport '../../../public/static/style.css';\n\nvar TaskPage = function TaskPage(_ref) {\n  var task = _ref.task;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useState = useState(task),\n      currentTask = _useState[0],\n      setCurrentTask = _useState[1];\n\n  function updateSolutions(solutions) {\n    setCurrentTask(_objectSpread({}, currentTask, {\n      _solutions: solutions\n    }));\n  }\n\n  return __jsx(LayoutComponent, {\n    user: user\n  }, __jsx(TaskDetailComponent, _extends({\n    updateSolutions: updateSolutions\n  }, currentTask)));\n};\n\nTaskPage.getInitialProps = function _callee(_ref2) {\n  var id, res, task;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = _ref2.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(HOSTNAME, \"/api/tasks/\").concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          task = _context.sent;\n          return _context.abrupt(\"return\", {\n            task: task\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default TaskPage;","map":null,"metadata":{},"sourceType":"module"}