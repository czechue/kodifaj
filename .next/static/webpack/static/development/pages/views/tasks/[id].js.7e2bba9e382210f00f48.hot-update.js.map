{"version":3,"file":"static/webpack/static/development/pages/views/tasks/[id].js.7e2bba9e382210f00f48.hot-update.js","sources":["webpack:///./components/task-detail/content/content.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport HeadingComponent from '../../shared/heading/heading.component';\nimport SolutionFormComponent from './solution-form/solution-form.component';\nimport { Solution } from '../../../lib/types/solution';\nimport SolutionsComponent, {\n  SolutionType,\n} from '../../shared/solutions/solutions.component';\n\nconst Heading = ({ children }: { children: string }) => (\n  <HeadingComponent\n    CustomTag=\"h2\"\n    orientation=\"left\"\n    size=\"2xl\"\n    font=\"thin\"\n    tracking=\"wide\"\n    classNames=\"mb-2\"\n  >\n    {children}\n  </HeadingComponent>\n);\n\nexport default function ContentComponent({\n  content,\n  solutions = [],\n  onSubmit,\n  loading,\n}: ContentProps) {\n  const [openSections, setOpenedSections] = useState({\n    solution: false,\n    tips: false,\n    solutions: false,\n  });\n\n  function toggleSection(section: OpenableSections) {\n    setOpenedSections(prevState => ({\n      ...prevState,\n      [section]: !prevState[section],\n    }));\n  }\n\n  return (\n    <>\n      <section>\n        <Heading>Zadanie</Heading>\n        <p>{content}</p>\n      </section>\n\n      <section className=\"mt-6\">\n        <div className=\"flex\">\n          <Heading>Twoje rozwiązanie</Heading>\n          <button onClick={() => toggleSection(OpenableSections.SOLUTION)}>\n            <img\n              className=\"mx-1 h-4\"\n              src={\n                openSections.solution\n                  ? '/static/images/chevron-thin-right.svg'\n                  : '/static/images/chevron-thin-left.svg'\n              }\n              alt=\"section toggler\"\n            />\n          </button>\n        </div>\n        {openSections.solution && (\n          <SolutionFormComponent loading={loading} onSubmit={onSubmit} />\n        )}\n      </section>\n\n      <section className=\"mt-6\">\n        <Heading>Wskazówki</Heading>\n        <p>{content}</p>\n      </section>\n\n      <section className=\"mt-6\">\n        <Heading>Rozwiązania</Heading>\n        <SolutionsComponent\n          type={SolutionType.WithoutTaskData}\n          solutions={solutions}\n        />\n      </section>\n    </>\n  );\n}\n\ninterface ContentProps {\n  content: string;\n  solutions: Solution[];\n  onSubmit: (value: any) => void;\n  loading: boolean;\n}\n\nenum OpenableSections {\n  SOLUTION = 'solution',\n  TIPS = 'tips',\n  SOLITIONS = 'solutions',\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AACA;AAYA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAHA;AADA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AAPA;AAYA;AAAA;AAAA;AAIA;AAAA;AAKA;AAAA;AAGA;AACA;AAFA;AAOA;AASA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}