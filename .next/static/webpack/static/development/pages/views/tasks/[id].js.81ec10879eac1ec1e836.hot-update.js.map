{"version":3,"file":"static/webpack/static/development/pages/views/tasks/[id].js.81ec10879eac1ec1e836.hot-update.js","sources":["webpack:///./pages/views/tasks/.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\n\nimport '../../../public/static/style.css';\nimport { Solution } from '../../../lib/types/solution';\n\nconst TaskPage: NextPage<Props> = ({ task }) => {\n  const { user } = useContext(UserContext);\n  const [currentTask, setCurrentTask] = useState<Task>(task);\n\n  function updateSolutions(solutions: Solution[]) {\n    setCurrentTask({ ...currentTask, _solutions: solutions });\n  }\n\n  return (\n    <LayoutComponent user={user}>\n      <TaskDetailComponent updateSolutions={updateSolutions} {...currentTask} />\n    </LayoutComponent>\n  );\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return { task };\n};\n\nexport default TaskPage;\n\ninterface Props {\n  task: Task;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}