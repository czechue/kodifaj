{"version":3,"file":"static/webpack/static/development/pages/views/tasks/[id].js.cb4eb5c94ba76d3b6458.hot-update.js","sources":["webpack:///./pages/views/tasks/.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport fetch from 'isomorphic-unfetch';\nimport { Task } from '../../../lib/types/task';\n\nimport { UserContext } from '../../../components/providers/user.provider';\nimport { HOSTNAME } from '../../../lib/hostname.config';\n\nimport LayoutComponent from '../../../components/shared/layout/layout.component';\nimport TaskDetailComponent from '../../../components/task-detail/task-detail.component';\n\nimport '../../../public/static/style.css';\n\n// todo: string[] do naprawy typ, error handling\n\nasync function fetchTask(id: string | string[] ) {\n  const res = await fetch(`${HOSTNAME}/api/tasks/${id}`);\n  const task = await res.json();\n  return { task };\n}\n\nconst TaskPage: NextPage<Props> = ({ task }) => {\n  const { user } = useContext(UserContext);\n  const [currentTask, setCurrentTask] = useState<Task>(task);\n\n  async function refresh() {\n    const refreshedProps = await fetchTask(task._id);\n    setCurrentTask(refreshedProps.task);\n  }\n\n  return (\n    <LayoutComponent user={user}>\n      <TaskDetailComponent refresh={refresh} {...currentTask} />\n    </LayoutComponent>\n  );\n};\n\nTaskPage.getInitialProps = async ({ query: { id } }: NextPageContext) => {\n    return fetchTask(id);\n};\n\nexport default TaskPage;\n\ninterface Props {\n  task: Task;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}